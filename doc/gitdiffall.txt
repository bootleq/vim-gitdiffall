*gitdiffall.txt*                                     View git diff in Vim tabs

Version:    0.1.1
Author:     bootleq <bootleq@gmail.com>
License:    Public Domain
Repository: https://github.com/bootleq/vim-gitdiffall

==============================================================================
CONTENTS                                                 *gitdiffall-contents*

    Introduction  .................. |gitdiffall-introduction|
    Commands  ...................... |gitdiffall-commands|
    Configuration  ................. |gitdiffall-configuration|
    Revisions  ..................... |gitdiffall-revisions|
    External scripts  .............. |gitdiffall-external-scripts|

==============================================================================
INTRODUCTION                                         *gitdiffall-introduction*

*gitdiffall* provides commands to diff file content with it's revisions. With
external scripts, changed files can be opened in Vim tabs, turning Vim into a
commit history viewer.

==============================================================================
COMMANDS                                                 *gitdiffall-commands*

:GitDiff [revision] [arguments]                          *gitdiffall-:GitDiff*

  Diff current file in a split window.

  <revision> and <arguments> are used similar to git-diff.
  See |gitdiffall-revisions| for some special ways to specify revisions.

  If there are existed GitDiff buffers in current tab, no diff will be
  performed, this command calls `:GitDiffInfo "log"` instead.

:GitDiffInfo [type]                                  *gitdiffall-:GitDiffInfo*

  Display information of current diff. <type> can be one of following:

  type      description ~
  -------   ----------- ~
  "logs"    All git-log entries between two comparing commits.
  "log"     Single log which should be most relevant to specified revision.
  (empty)   Use default, same as "logs".

:GitDiffOff                                           *gitdiffall-:GitDiffOff*

  Use this to stop GitDiff and back to original buffer.

  Diff options will be restore to their original values, behave like
  |:diffoff| after Vim 7.4.

==============================================================================
CONFIGURATION                                       *gitdiffall-configuration*

                                                     *g:gitdiffall_log_format*
g:gitdiffall_log_format            (default: none) ~

  Used by :GitDiffInfo command, will be passed to git-log "--format" option.

  If not set, let git to determine it, usually the default "medium" will be
  used.

==============================================================================
REVISIONS                                               *gitdiffall-revisions*

General <revision> arguments are used like git-diff.
See man pages of git-diff(1) and "SPECIFYING REVISIONS" in gitrevisions(7).
Examples:

  revision    example   description ~
  ---------   -------   -----------  ~
  (empty)               Nothing (will compare current unstaged/staged changes)
  <sha1>      dae86e    To commit object dae86e
  <refname>   HEAD      To HEAD
  <rev>^      HEAD^     To first parent of HEAD
  <rev>~<n>   HEAD~3    To 3rd parent of HEAD

For convenience, there are some special notations:

  revision    example   description ~
  ----------  -------   -----------  ~
  @<rev>      @dae86e   Similar to <rev>, but only compare <rev> with it's
                        previous commit, i.e. expand to <previous-rev>..<rev>.
                        This is for quickly checking changes in a specified
                        commit.
                        Note that <previous-rev> may be different to <rev>^,
                        but fetched from previous entry in git-log, to provide
                        a more linear-like history traversal.
  <n>         1         Will be expanded to @<rev>, where <rev> is the nth
                        previous commit from HEAD. <n> starts from 1.
  +<n>        +4        Like <n>, but only commits include current file are
                        counted.

==============================================================================
EXTERNAL SCRIPTS                                 *gitdiffall-external-scripts*

This plugin can be used with external helper scripts, make git-diff workflow
more comfortable.

See https://github.com/bootleq/vim-gitdiffall#readme for more information.

gitdiffall.rb ~
This ruby script opens diff files into Vim tabs and starts GitDiff.

gitdiffall.zsh ~
This provides zsh completion function for easier using gitdiffall.rb.

==============================================================================
vim:tw=78:fo=tcroq2mM:et:sts=2:sw=2:ft=help:norl:
